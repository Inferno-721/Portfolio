---
import { SignedIn } from "@clerk/astro/components";
import { isUserAdmin } from "@/lib/auth";

const { userId } = Astro.locals.auth();
const isAdmin = await isUserAdmin(userId);
const { type, id, slug, treeSlug, showText = false } = Astro.props;

// Determine the confirmation message based on the type
const confirmMessage = type === "tree" 
  ? "Are you sure you want to delete this tree? This will also delete all leaves within it."
  : "Are you sure you want to delete this leaf?";

// Determine the redirect URL based on the type
const redirectUrl = type === "tree" 
  ? "/garden" 
  : `/garden/${treeSlug}`;
---

{
  isAdmin && (
    <SignedIn>
      <button
        type="button"
        data-id={id}
        data-type={type}
        data-slug={slug}
        data-tree-slug={treeSlug}
        data-redirect={redirectUrl}
        data-confirm={confirmMessage}
        class="delete-button inline-flex items-center justify-center rounded-full p-1.5 text-red-500/70 transition-colors hover:bg-red-100 hover:text-red-600 dark:hover:bg-red-900/30"
        title={`Delete ${type}`}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
            clip-rule="evenodd"
          />
        </svg>
        {showText && <span class="ml-1">Delete</span>}
      </button>
    </SignedIn>
  )
}

<script>
  function setupDeleteButtons() {
    document.querySelectorAll('.delete-button').forEach((button: any) => {
      if (button._initialized) return;
      button._initialized = true;
      
      button.addEventListener('click', async (e: any) => {
        const btn = e.currentTarget as HTMLButtonElement;
        const id = btn.dataset.id;
        const type = btn.dataset.type;
        const confirmMessage = btn.dataset.confirm;
        const redirectUrl = btn.dataset.redirect;
        
        if (!id || !type || !confirmMessage || !redirectUrl) return;
        
        if (confirm(confirmMessage)) {
          try {
            const response = await fetch(`/api/garden/delete`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                id: parseInt(id),
                type
              }),
            });
            
            if (response.ok) {
              window.location.href = redirectUrl;
            } else {
              alert('Failed to delete. Please try again.');
            }
          } catch (error) {
            console.error('Error deleting:', error);
            alert('An error occurred. Please try again.');
          }
        }
      });
    });
  }

  // Run on initial load and after Astro page transitions
  document.addEventListener('DOMContentLoaded', setupDeleteButtons);
  document.addEventListener('astro:page-load', setupDeleteButtons);
</script>