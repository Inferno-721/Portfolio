---
export const prerender = false;
import BaseLayout from "@/layouts/BaseLayout.astro";
import GardenHeader from "@/components/garden/GardenHeader.astro";
import TreeCard from "@/components/garden/TreeCard.astro";
import { createClient } from '@supabase/supabase-js';

// Create a Supabase client using your public URL and anon key
const supabaseUrl = import.meta.env.SUPABASE_URL;
const supabaseAnonKey = import.meta.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Fetch trees with their leaves and nested leaf references
const { data: treesData, error } = await supabase
  .from('trees')
  .select(`
    *,
    leaves (
      *,
      leaf_references (*)
    )
  `);

if (error) {
  console.error("Error fetching trees:", error);
  // Optionally, you could set treesData to an empty array or show an error message
}

const trees = treesData ?? [];
---

<BaseLayout
  title="Garden"
  description="My digital garden of ideas and solutions"
>
  <div class="container mx-auto pt-24 pb-12 md:pt-32 xl:pt-24">
    <GardenHeader
      title="Digital Garden"
      description="This is where I cultivate and grow my ideas, solutions, and learnings. Browse through different trees to explore various topics."
    />

    <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
      {trees.map((tree) => <TreeCard tree={tree} />)}
    </div>
  </div>
</BaseLayout>
